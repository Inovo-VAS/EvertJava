import java.io.File;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import java.util.TreeMap;

import baasserver.Client;
import baasserver.Server;
import baasserver.db.protocols.DBRequestHandle;
import baasserver.db.system.DBServer;
import baasserver.db.system.DBSystem;
import baasserver.encdec.Base64;
import baasserver.protocols.markup.IOMarkupRequestHandle;

public class BaasServerMain {

	/**
	 * @param args
	 */
	
	public static void main(String[] args) {	
		String rootpath=BaasServerMain.class.getProtectionDomain().getCodeSource().getLocation().getPath().substring(1);
		if(rootpath.indexOf(".jar")>-1){
			rootpath=new File(rootpath).getParent().replaceAll("[\\\\]", "/");
			rootpath=(rootpath.endsWith("/")?rootpath:rootpath+"/");
		}
		baasserver.io.Logger.setLogFilePath(rootpath+"log.log");
		
		baasserver.io.Logger.debug(Thread.currentThread().getContextClassLoader().getResource("").getPath().substring(1)+"log.log");
		baasserver.io.Logger.debug("EnvironmentStarted");
		try {
			baasserver.reflection.REFUtils.loadJarPackagesFromPath(Thread.currentThread().getContextClassLoader().getResource("").getPath());
		} catch (Exception e) {
			
		}
		try {
			baasserver.reflection.REFUtils.loadJarPackagesFromPath(Thread.currentThread().getContextClassLoader().getResource("").getPath()+"jdbc/");
		} catch (Exception e) {
			
		}
		
		try {
			DBSystem.registerWebSystem("baasserver.db.system").registerDBManager("INOVO", "dbtype=sqlserver|dbhost=NEMUS|dbinstance=|dbname=SQLPR1|dbuser=PTOOLS|dbpw=PTOOLS|dbschema=PTOOLS".split("[|]")).nextConnection();
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		Server.initServer(DBServer.class, 2222,DBRequestHandle.class);
		Server.initServer(2223,IOMarkupRequestHandle.class);
		
		try {
			Client client=new Client("127.0.0.1",2222);
			for(int r=0;r<10;r++){
				client.clientOutputStream().writeln("GET /baasserver/db/web/system/select.sql?PROPERTY:DBURL=//baasserver.db.system/INOVO&PROPERTY:TABLE=TESTTABLE&PROPERTY:FROMDATE=NOW() HTTP/1.1");
				client.clientOutputStream().flush();
				client.clientSocketHandle().isDoneWriting(true);
				client.clientSocketHandle().isDoneReading(true);
				
				int bytesReadCount=0;
				byte[] recieved=new byte[1024];
				
				ObjectInputStream ooi=new ObjectInputStream(new Base64.InputStream(client.clientInputStream()));
				TreeMap<Integer,ArrayList<Object>> testResultSet= (TreeMap<Integer, ArrayList<Object>>) ooi.readObject();
				if(testResultSet!=null){
					testResultSet.clear();
				}
				
				if(r<10){
					client.reConnect();
				}
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		
	}

	
}
