package baasserver.db.system;

import java.util.ArrayList;
import java.util.HashMap;

import baasserver.system.BaseSystem;
import baasserver.web.system.WebSystem;

public class DBSystem extends WebSystem {
	
	public static DBSystem registerWebSystem(String systemAllias) throws Exception{
		return (DBSystem) BaseSystem.registerSystem(systemAllias, DBSystem.class);
	}
	
	public Class<?> defaultDBManagerClass(){
		return DBManager.class;
	}
	
	private HashMap<String, DBManager> _dbmanagers=new HashMap<String,DBManager>();
	
	public DBManager registerDBManager(String dbmanagername,String[] dbproperties) throws Exception{
		DBManager registerDBManager=null;
		synchronized (_dbmanagers) {
			if(_dbmanagers.containsKey(dbmanagername=dbmanagername.toUpperCase())){
				registerDBManager=_dbmanagers.get(dbmanagername);
			}
			else{
				_dbmanagers.put(dbmanagername.toUpperCase(),registerDBManager=new DBManager(this, dbproperties));
			}
		}
		return registerDBManager;
	}
	
	public DBManager registerDefaultDBManager(String[] dbproperties) throws Exception{
		String dbmanagername=this.defaultDBManagerClass().getName();
		DBManager registerDBManager=null;
		synchronized (_dbmanagers) {
			if(_dbmanagers.containsKey(dbmanagername=dbmanagername.toUpperCase())){
				registerDBManager=_dbmanagers.get(dbmanagername);
			}
			else{
				ArrayList<String> DbProperties=new ArrayList<String>();
				for(String dbProperty:dbproperties){
					DbProperties.add(dbProperty);
				}
				registerDBManager=(DBManager)this.defaultDBManagerClass().getConstructor(DBSystem.class,String[].class).newInstance(new Object[]{this, dbproperties});
				_dbmanagers.put(dbmanagername.toUpperCase(),registerDBManager);
			}
		}
		return registerDBManager;
	}
}
