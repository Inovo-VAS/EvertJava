package inovo.presence.agent.gateway;

import java.util.ArrayList;
import java.util.HashMap;

public class PresenceAgentStatusQueue implements Runnable{
	
	
	private static PresenceAgentStatusQueue _presenceAgentStatusQueue=null;
	
	
	private ArrayList<HashMap<String,String>> _queuedPresenceAgentStatusses=new ArrayList<HashMap<String,String>>();
	private ArrayList<HashMap<String,String>> _presenceAgentStatussesToActivate=new ArrayList<HashMap<String,String>>();
	
	private HashMap<String,HashMap<String,String>> _activePresenceAgentStatusses=new HashMap<String,HashMap<String,String>>();
	
	private Thread _presenceAgentStatusQueueThread=null;
	public PresenceAgentStatusQueue(){
		_presenceAgentStatusQueueThread=new Thread(this);
		_presenceAgentStatusQueueThread.start();
	}


	private boolean _shutdownQueue=false;
	
	public void shutdownQueue(){
		this._shutdownQueue=true;
		_presenceAgentStatusQueue.notifyAll();
		while(!_queuedPresenceAgentStatusses.isEmpty()){
			synchronized (_presenceAgentStatusQueue) {
				try {
					_presenceAgentStatusQueue.wait(10);
				} catch (InterruptedException e) {
				}
			}
		}
	}
	
	private 
	@Override
	public void run() {
		while(!_shutdownQueue){
			
			synchronized (_presenceAgentStatusQueue) {
				try {
					_presenceAgentStatusQueue.wait();
				} catch (InterruptedException e) {
				}
			}
		}
	}
	
	public static PresenceAgentStatusQueue activatePresenceAgentStatusQueue(){
		if(_presenceAgentStatusQueue==null) _presenceAgentStatusQueue=new PresenceAgentStatusQueue();
		return _presenceAgentStatusQueue;
	}

	public static void publishPresenceAgentStatus(
			HashMap<String, String> presenceAgentStatusInfo) {
		_presenceAgentStatusQueue.queuePresenceAgentStatus(presenceAgentStatusInfo);
	}

	private void queuePresenceAgentStatus(
			HashMap<String, String> presenceAgentStatusInfo) {
		synchronized (_presenceAgentStatusQueue._queuedPresenceAgentStatusses) {
			_queuedPresenceAgentStatusses.add(presenceAgentStatusInfo);
		}
	}
}
