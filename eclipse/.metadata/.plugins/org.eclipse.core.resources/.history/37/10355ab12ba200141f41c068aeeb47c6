package inovo.flat.file.leads.importer;

import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;

import inovo.db.Database;
import inovo.web.InovoHTMLPageWidget;
import inovo.web.InovoWebWidget;

public class FlatFileLeadsShortcodeConfiguration extends InovoHTMLPageWidget {

	public FlatFileLeadsShortcodeConfiguration(InovoWebWidget parentWidget,
			InputStream inStream) {
		super(parentWidget, inStream);
	}

	@Override
	public void pageContent() throws Exception {
		this.action("ADD SHORTCODE", "addshortcode", "", "", "", "", "", "");
		this.startElement("div", "id=mappedshortcodes".split("[|]"), true);
			this.mappedshortcodes();
		this.endElement("div", true);
	}
	
	public void mappedshortcodes() throws Exception{
		this.startTable(null);
			this.startRow(null);
				this.startColumn("font-size:0.8em");
					this.respondString("SHORTCODE");
				this.endColumn();
				this.startColumn("font-size:0.8em");
					this.respondString("CAMPAIGN");
				this.endColumn();
				this.startColumn("font-size:0.8em");
					this.respondString("LOAD");
				this.endColumn();
			this.endRow();
		Database.executeDBRequest(null, "FLATFILELEADSIMPORTER", "SELECT ID,SHORTCODE,DEFAULTSERVICEID,DEFAULTLOADID FROM <DBUSER>.LEADSDATAFILESHORTCODEMAP",null, this,"rowMappedShortcodes");
		this.endTable();
	}
	
	public void rowMappedShortcodes(Integer rowIndex,ArrayList<String> rowData,ArrayList<String> rowColumns) throws Exception{
		if(rowIndex==0) return;
		this.startRow(null);
			this.startColumn("font-size:0.8em");
				this.respondString(rowData.get(1)); //SHORTCODE
			this.endColumn();
			this.startColumn("font-size:0.8em");
				this.respondString(rowData.get(2)); //SERVICEID
			this.endColumn();
			this.startColumn("font-size:0.8em");
				this.respondString(rowData.get(3)); //LOADID
			this.endColumn();
		this.endRow();
	}
	
	public void addshortcode() throws Exception{
		Database.executeDBRequest(null, "PRESENCE", "SELECT ID,'('+UPPER(ID) +') ' +NAME AS SERVICENAME FROM <DBUSER>.PCO_OUTBOUNDSERVICE", null, this,"rowNewServicesData");
		
		this.showDialog("", "contentid=addchortcodefields|contenttitle=ADD SHORT CODE|BUTTON:CONFIRM ADD SHORT CODE=command=confirmaddingshortcode|BUTTON:CANCEL=".split("[|]"));
		this.replaceComponentContent("addchortcodefields");
			this.startTable(null);
				this.startRow(null);
					this.startColumn("font-size:0.8em");this.respondString("SHORT CODE");this.endColumn();
					this.startCell(null);this.fieldInput("NEWSHORTCODE", "", "text", true, null);
				this.endRow();
				this.startRow(null);
					this.startColumn("font-size:0.8em");this.respondString("PRESENCE CAMPAIGN");this.endColumn();
					this.startCell(null);this.fieldInput("NEWSERVICEID", "", "select", true, null,this._newServices);
					this.startCell(null);
						this.action("LOADS", "newserviceloads", "", "", "newserviceloadid", "", "", "");
					this.endCell();
				this.endRow();
				this.startRow(null);
					this.startCell("id=newserviceloadid|colspan=3".split("[|]"));
					this.endCell();
				this.endRow();
			this.endTable();
		this.endReplaceComponentContent();
	}
	
	private HashMap<String,String> _newServices=new HashMap<String, String>();
	
	public void rowNewServicesData(Integer rowIndex,ArrayList<String> rowData,ArrayList<String> rowColumns){
		if(rowIndex==0) return;
		_newServices.put(rowData.get(0), rowData.get(1));
	}
	
	public void newserviceloads() throws Exception{
		if(this.requestParameter("NEWSERVICEID").equals("")){
			this.respondString("NO CAMPAIGN SELECTED");
		}
		else{
			Database.executeDBRequest(null, "PRESENCE", "SELECT LOADID,'('+UPPER(LOADID)+':'+STATUS+')'+ DESCRIPTION AS LOADNAME FROM <DBUSER>.PCO_LOAD WHERE SERVICEID="+this.requestParameter("NEWSERVICEID"), null, this,"rowNewServiceLoadsData");
			this.startTable(null);
				this.startRow(null);
					this.startColumn("font-size:0.8em");this.respondString("LOAD");this.endColumn();
					this.startCell(null);this.fieldInput("NEWLOADID", "", "select", true, null,_newServiceLoads);
				this.endRow();
			this.endTable();
		}
	}
	
	public void rowNewServiceLoadsData(Integer rowIndex,ArrayList<String> rowData,ArrayList<String> rowColumns){
		if(rowIndex==0) return;
		_newServiceLoads.put(rowData.get(0), rowData.get(1));
	}
	
	private HashMap<String,String> _newServiceLoads=new HashMap<String, String>();
	
	public void confirmaddingshortcode() throws Exception{
		HashMap<String,String> shortcodeParameters=new HashMap<String, String>();
		ArrayList<String> errors=new ArrayList<String>();
		if(this.requestParameter("NEWSHORTCODE").equals("")){
			errors.add("NO SHORTCODE ENTERED");
		}
		else{
			shortcodeParameters.put("NEWSHORTCODECOUNT", "0");
			shortcodeParameters.put("NEWSHORTCODE", this.requestParameter("NEWSHORTCODE"));
			Database.executeDBRequest(null, "FLATFILELEADSIMPORTER", "SELECT COUNT(*) AS NEWSHORTCODECOUNT FROM <DBUSER>.LEADSDATAFILESHORTCODEMAP WHERE UPPER(SHORTCODE)=UPPER(:NEWSHORTCODE)" , shortcodeParameters, this);
			if(!shortcodeParameters.get("NEWSHORTCODECOUNT").equals("0")){
				errors.add("SHORT CODE ["+this.requestParameter("NEWSHORTCODE")+"] ALREADY EXIST");
			}
		}
		if(!this.requestParameter("NEWSHORTCODE").equals("")&&this.requestParameter("NEWSERVICEID").equals("")){
			errors.add("NO CAMPIAGN SELECTED");
		}
		if(!this.requestParameter("NEWSHORTCODE").equals("")&&!this.requestParameter("NEWSERVICEID").equals("")&&this.requestParameter("NEWLOADID").equals("")){
			errors.add("NO LOAD SELECTED");
		}
		if(errors.isEmpty()){
			HashMap<String,String> addshortcodeparams=new HashMap<String, String>();
			addshortcodeparams.put("NEWSHORTCODE",this.requestParameter("NEWSHORTCODE"));
			addshortcodeparams.put("NEWSERVICEID",this.requestParameter("NEWSERVICEID"));
			addshortcodeparams.put("NEWLOADID",this.requestParameter("NEWLOADID"));
			Database.executeDBRequest(null, "FLATFILELEADSIMPORTER", "INSERT INTO <DBUSER>.LEADSDATAFILESHORTCODEMAP (SHORTCODE,DEFAULTSERVICEID,DEFAULTLOADID) SELECT :NEWSHORTCODE AS SHORTCODE,:NEWSERVICEID AS DEFAULTSERVICEID,:NEWLOADID AS DEFAULTLOADID WHERE (SELECT COUNT(*) FROM <DBUSER>.LEADSDATAFILESHORTCODEMAP WHERE SHORTCODE<>:NEWSHORTCODE)=0", addshortcodeparams	, this);
			this.replaceComponentContent("mappedshortcodes");
				this.mappedshortcodes();
			this.endReplaceComponentContent();
		}else{
			showDialog("", "contentid=unabletoaddshortcode|contenttitle=UNABLE TO ADD SHORTCODE".split("[|]"));
			this.replaceComponentContent("unabletoaddshortcode");
				this.startTable(null);
					while(!errors.isEmpty()){
						this.startRow(null);
							this.startCell(null);this.respondString(errors.remove(0));this.endCell();
						this.endRow();
					}
				this.endTable();
			this.endReplaceComponentContent();
			
		}
	}
}
