package baasserver.netty;

import io.netty.bootstrap.ServerBootstrap;
import io.netty.channel.Channel;
import io.netty.channel.EventLoopGroup;
import io.netty.channel.nio.NioEventLoopGroup;
import io.netty.channel.socket.nio.NioServerSocketChannel;

import io.netty.channel.ChannelInitializer;
import io.netty.channel.ChannelPipeline;
import io.netty.channel.socket.SocketChannel;
import io.netty.handler.codec.http.HttpObjectAggregator;
import io.netty.handler.codec.http.HttpServerCodec;


public class NettyServer implements Runnable {

	private int _port=0;
	public NettyServer(int port){
		this._port=port;
	}
	
	@Override
	public void run() {
		EventLoopGroup bossGroup = new NioEventLoopGroup(1);
        EventLoopGroup workerGroup = new NioEventLoopGroup();
        try {
            ServerBootstrap b = new ServerBootstrap();
            b.group(bossGroup, workerGroup)
             .channel(NioServerSocketChannel.class)
             .childHandler(new ChannelInitializer<SocketChannel>() {
            	    @Override
            	    public void initChannel(SocketChannel ch) throws Exception {
            	        ChannelPipeline pipeline = ch.pipeline();
            	        pipeline.addLast("codec-http", new HttpServerCodec());
            	        pipeline.addLast("aggregator", new HttpObjectAggregator(65536));
            	        pipeline.addLast("handler", new WebSocketServerHandler());
            	    }
            	    });

            Channel ch = b.bind(_port).sync().channel();
            System.out.println("Web socket server started at port " + _port + '.');
            System.out.println("Open your browser and navigate to http://localhost:" + _port + '/');

            ch.closeFuture().sync();
        } finally {
            bossGroup.shutdownGracefully();
            workerGroup.shutdownGracefully();
        }
	}

}
