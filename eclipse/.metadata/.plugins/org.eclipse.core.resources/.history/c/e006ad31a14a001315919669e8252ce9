package inovo.automation;

import inovo.db.Database;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.TreeMap;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import org.apache.tomcat.dbcp.dbcp.DbcpException;

public class AutomatedTasksQueue implements Runnable{
	
	private static ExecutorService _executingTasks=Executors.newCachedThreadPool();
	private static AutomatedTasksQueue _automatedTasksQueue=null;
	
	private boolean _shutdownAutomatedTasks=false;
	private AutomatedTasksQueue(){
		
	}
	
	public static void initAutomatedTasksQueue(){
		if(_automatedTasksQueue==null){
			new Thread(_automatedTasksQueue=new AutomatedTasksQueue()).start();
		}
	}

	@Override
	public void run() {
		while(!_shutdownAutomatedTasks){
			try{
				TreeMap<Integer, ArrayList<String>> enabledAutomatedTasks = Database.executeDBRequest("AUTOMATEDTASKS", "SELECT * FROM <DBUSER>.AUTOMATED_TASK WHERE ENABLED='E'", null);
				HashMap<String,String> enabledAutomatedTaskData=new HashMap<String,String>();
				HashMap<String,String> enabledAutomatedTaskPropertyData=new HashMap<String,String>();
				for(int rowindexEnabledAutomatedTasks:enabledAutomatedTasks.keySet()){
					if(rowindexEnabledAutomatedTasks==0) continue;
					enabledAutomatedTaskData.clear();
					enabledAutomatedTaskData.putAll(Database.rowData(enabledAutomatedTasks, rowindexEnabledAutomatedTasks));
					enabledAutomatedTaskData.put("AUTOTASKID", enabledAutomatedTaskData.remove("ID"));
				
					TreeMap<Integer, ArrayList<String>> enabledAutomatedTaskProperties = Database.executeDBRequest("AUTOMATEDTASKS", "SELECT AUTOMATED_TASK_PROPERTY.ID,AUTOMATED_TASK_TYPE_PROPERTY.PROPERTY_NAME,AUTOMATED_TASK_PROPERTY.PROPERTY_VALUE FROM <DBUSER>.AUTOMATED_TASK_PROPERTY INNER JOIN <DBUSER>.AUTOMATED_TASK_TYPE_PROPERTY ON AUTOMATED_TASK_PROPERTY.TASKID=:AUTOTASKID AND AUTOMATED_TASK_PROPERTY.TASKTYPEID=AUTOMATED_TASK_TYPE_PROPERTY.TASKTYPEID AND AUTOMATED_TASK_PROPERTY.TASKTYPEPROPID=AUTOMATED_TASK_TYPE_PROPERTY.ID", enabledAutomatedTaskData);
					for(int rowindexAutomatedTaskProperty:enabledAutomatedTaskProperties.keySet()){
						if(rowindexAutomatedTaskProperty==0) continue;
						enabledAutomatedTaskPropertyData.clear();
						enabledAutomatedTaskPropertyData=Database.rowData(enabledAutomatedTaskProperties, rowindexAutomatedTaskProperty);
						enabledAutomatedTaskPropertyData.put("AUTOTASKPROPID", enabledAutomatedTaskPropertyData.remove("ID"));
						
					}
				}
			}
			catch(Exception e){
				e.printStackTrace();
			}
			try {
				Thread.sleep(20*1024);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
	}
}
