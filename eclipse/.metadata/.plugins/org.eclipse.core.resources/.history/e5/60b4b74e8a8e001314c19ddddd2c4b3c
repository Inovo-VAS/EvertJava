import java.io.BufferedOutputStream;
import java.io.BufferedWriter;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;

import baasserver.Client;
import baasserver.Server;
import baasserver.protocols.markup.IOMarkupRequestHandle;

public class BaasServerMain {

	/**
	 * @param args
	 */
	public static void main(String[] args) {	
		String rootpath=BaasServerMain.class.getProtectionDomain().getCodeSource().getLocation().getPath().substring(1);
		if(rootpath.indexOf(".jar")>-1){
			rootpath=new File(rootpath).getParent().replaceAll("[\\\\]", "/");
			rootpath=(rootpath.endsWith("/")?rootpath:rootpath+"/");
		}
		baasserver.io.Logger.setLogFilePath(rootpath+"log.log");
		
		baasserver.io.Logger.debug(Thread.currentThread().getContextClassLoader().getResource("").getPath().substring(1)+"log.log");
		baasserver.io.Logger.debug("EnvironmentStarted");
		try {
			baasserver.reflection.REFUtils.loadJarPackagesFromPath(Thread.currentThread().getContextClassLoader().getResource("").getPath());
		} catch (Exception e) {
			
		}
		Server.initServer(2222,IOMarkupRequestHandle.class);
		Server.initServer(2223,IOMarkupRequestHandle.class);
		
		try {
			Client testClient=new Client("http","//127.0.0.1",2222);
			ByteArrayInputStream bin=new ByteArrayInputStream(new byte[1024]);
			ByteArrayOutputStream bout=new ByteArrayOutputStream();
			
			InputStreamReader preader=new InputStreamReader(bin);
			OutputStreamWriter pwriter=new OutputStreamWriter(bout);
		} catch (IOException e) {
		}
		
		
	}

	
}
